// Login mit Basic Authentication mit korrekten Credentials admin:123
###
# @name loginAdminCorrect
GET https://localhost/api/authenticate
Authorization: Basic YWRtaW46MTIz

@adminToken = {{loginAdminCorrect.response.headers.Authorization}}

### Auflisten aller Nutzer mit Token(Admin)
GET https://localhost/api/users
Authorization: {{adminToken}}

// Lege zweiten User an
###
POST https://localhost/api/users
Authorization: {{adminToken}}
Content-Type: application/json

{
    "userID": "manfred",
    "firstName": "Manfred",
    "lastName": "Müller",
    "password": "asdf"
}

//
// Studiengänge
//
### Auflisten aller Studiengänge
GET https://localhost/api/degreeCourses
Authorization: {{adminToken}}

// Lege einen Studiengang an
###
# @name createDegreeCourseRequest
POST https://127.0.0.1/api/degreeCourses
Authorization: {{adminToken}}
Content-Type: application/json

{
    "universityName": "Beuth Hochschule für Technik Berlin",
    "universityShortName": "Beuth HS",
    "departmentName": "Informatik und Medien",
    "departmentShortName": "FB VI",
    "name": "Orchideenzucht Bachelor",
    "shortName": "OZ-BA"
}

###

POST https://127.0.0.1/api/degreeCourses
Authorization: {{adminToken}}
Content-Type: application/json

{
    "universityName": "Technische Universität München",
    "universityShortName": "TUM",
    "departmentName": "Informatik",
    "departmentShortName": "FB IX",
    "name": "Robotik Bachelor",
    "shortName": "RO-BA"
}

###
@degreeCourseID = {{createDegreeCourseRequest.response.body.id}}

### Abrufen von dem angelegten Studiengang
https://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}

##################################################################

### Auflisten aller Studienbewerbungen, es sollte noch keine geben
https://localhost/api/degreeCourseApplications
Authorization: {{adminToken}}

// Login mit Basic Authentication als manfred mit korrekten Credentials
###
# @name loginManfredCorrect
GET https://localhost/api/authenticate
Authorization: Basic manfred:asdf
###
@manfredToken = {{loginManfredCorrect.response.headers.Authorization}}

### Studienbewerbungen für manfred auflisten (es sollte 0 sein)
GET https://localhost/api/degreeCourseApplications/myApplications
Authorization: {{manfredToken}}

// Studienbewerbung für Manfred anlegen
###
# @name createApplicationRequest
POST https://localhost/api/degreeCourseApplications
Authorization: {{manfredToken}}
Content-Type: application/json

{
    "degreeCourseID": "{{degreeCourseID}}",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

// Lege dritten User an
###
POST https://localhost/api/users
Authorization: {{adminToken}}
Content-Type: application/json

{
    "userID": "susi",
    "firstName": "Susi",
    "lastName": "Sunkist",
    "password": "asdf"
}

// Login mit Basic Authentication als manfred mit korrekten Credentials
###
# @name loginSusiCorrect
GET https://localhost/api/authenticate
Authorization: Basic susi:asdf
###
@susiToken = {{loginSusiCorrect.response.headers.Authorization}}

// In diesem Fall legt der Administrator für den User susi eine Bewerbung an
###
POST https://localhost/api/degreeCourseApplications
Authorization: {{adminToken}}
Content-Type: application/json

{
    "applicantUserID": "susi",
    "degreeCourseID": "{{degreeCourseID}}",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

// Nicht existierender Kurs
###
POST https://localhost/api/degreeCourseApplications
Authorization: {{adminToken}}
Content-Type: application/json

{
    "applicantUserID": "susi",
    "degreeCourseID": "6474fe8bfa619fa30415b9f9",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

// In diesem Fall legt Manfred für den User susi eine Bewerbung an
###
POST https://localhost/api/degreeCourseApplications
Authorization: {{manfredToken}}
Content-Type: application/json

{
    "applicantUserID": "susi",
    "degreeCourseID": "{{degreeCourseID}}",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

// In diesem Fall legt der Administrator für den User manfred erneut die gleiche Bewerbung an, das sollte scheitern
###
POST https://localhost/api/degreeCourseApplications
Authorization: {{adminToken}}
Content-Type: application/json

{
    "applicantUserID": "manfred",
    "degreeCourseID": "{{degreeCourseID}}",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

###
@applicationID = {{createApplicationRequest.response.body.id}}

### Studienbewerbungen für manfred auflisten (es sollte 1 sein)
GET https://localhost/api/degreeCourseApplications/myApplications
Authorization: {{manfredToken}}

### Der Admin sucht nach Bewerbungen von Manfred
GET https://localhost/api/degreeCourseApplications?applicantUserID=manfred
Authorization: {{adminToken}}

### Auflisten der Bewerbungen für einen Studiengang
GET https://localhost/api/degreeCourseApplications?degreeCourseID={{degreeCourseID}}
Authorization: {{adminToken}}

###
// Anlegen einer Bewerbung für einen Studiengang, den es nicht gibt, Es sollte eine Fehlermeldung geben
POST https://localhost/api/degreeCourseApplications
Authorization: {{manfredToken}}
Content-Type: application/json

{
    "degreeCourseID": "gibt es nicht",
    "targetPeriodYear": 2024,
    "targetPeriodShortName": "WiSe"
}

### Nachgelagerte Suche für Studienbewerbungen
GET https://localhost/api/degreeCourses/{{degreeCourseID}}/degreeCourseApplications
Authorization: {{adminToken}}

### Ändere das Bewerbungsjahr in der existierenden Bewerbung
PUT https://localhost/api/degreeCourseApplications/{{applicationID}}
Authorization: {{adminToken}}
Content-Type: application/json

{
    "targetPeriodYear": 2025
}

### Ändere die ID in der existierenden Bewerbung, sollte nicht gehen.
PUT https://localhost/api/degreeCourseApplications/{{applicationID}}
Authorization: {{adminToken}}
Content-Type: application/json

{
    "targetPeriodYear": 2025,
    "_id": "peofs398fjp98sfas98fSFE9"
}

### Löschen von der Bewerbung
DELETE  https://localhost/api/degreeCourseApplications/{{applicationID}}
Authorization: {{adminToken}}

### Löschen von nicht existierenden Bewerbung
DELETE  https://localhost/api/degreeCourseApplications/6475d998ee1bf778003dda81
Authorization: {{adminToken}}

### Löschen von Manfreds Bewerbung über Susi, sollte nicht gehen
DELETE  https://localhost/api/degreeCourseApplications/{{applicationID}}
Authorization: {{susiToken}}

### Löschen von Manfreds Bewerbung über Manfred
DELETE  https://localhost/api/degreeCourseApplications/{{applicationID}}
Authorization: {{manfredToken}}

### Löschen des Studiengangs
DELETE  https://localhost/api/degreeCourses/{{degreeCourseID}}
Authorization: {{adminToken}}

### Löschen des Users
DELETE  https://localhost/api/users/manfred
Authorization: {{adminToken}}